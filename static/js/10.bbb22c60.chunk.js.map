{"version":3,"sources":["components/Quiz-list/Quiz-list.module.css","components/Quiz-list/Quiz-list.jsx","reducers/action-creators/quiz-list-AC.js","containers/Quiz-list-container.jsx"],"names":["module","exports","QuizList","items","quizListInfo","map","el","className","styles","key","id","to","chapter","title","setIsFetchingList","value","type","payload","QuizListContainer","this","props","getQuizList","length","Preloader","React","Component","mapDispatchToProps","dispatch","getState","firestore","getFirestore","collection","get","then","querySnapshot","list","forEach","doc","data","description","push","catch","error","console","log","connect","quizList"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,oBAAoB,qCAAqC,YAAY,6BAA6B,YAAY,6BAA6B,QAAU,2BAA2B,MAAQ,2B,sHCuB3LC,EApBE,SAAC,GAAsB,IAChCC,EAD+B,EAAnBC,aACSC,KAAI,SAAAC,GAC3B,OACE,wBAAIC,UAAWC,IAAO,aAAcC,IAAKH,EAAGI,IAC1C,kBAAC,IAAD,CAAMC,GAAE,gBAAWL,EAAGI,KACpB,0BAAMH,UAAWC,IAAM,SAAcF,EAAGM,SAD1C,MAC4D,0BAAML,UAAWC,IAAM,OAAYF,EAAGO,YAM1G,OACE,yBAAKN,UAAWC,IAAO,sBACnB,wBAAID,UAAWC,IAAO,cACnBL,K,gBClBEW,EAAoB,SAACC,GAAD,MAAY,CAAEC,KAAM,uBAAwBC,QAASF,ICMhFG,E,kLAEFC,KAAKC,MAAMC,gB,+BAIX,OACE,oCACsC,IAAnCF,KAAKC,MAAMhB,aAAakB,OAAe,kBAAC,EAAaH,KAAKC,OAAY,kBAACG,EAAA,EAAD,W,GAR/CC,IAAMC,WAoBhCC,EAAqB,CACzBL,YDxByB,WACzB,OAAO,SAACM,EAAUC,EAAX,GAA2C,IAC1CC,GAAYC,EAD6B,EAAnBA,gBAE5BH,EAASb,GAAkB,IAC3Be,EAAUE,WAAW,UAAUC,MAC9BC,MAAK,SAAAC,GACJ,IAAMC,EAAO,GASb,OARAD,EAAcE,SAAQ,SAACC,GACrB,IAAM/B,EAAK,CACTO,MAAOwB,EAAIC,OAAOC,YAAY1B,MAC9BD,QAASyB,EAAIC,OAAOC,YAAY3B,QAChCF,GAAI2B,EAAI3B,IAEVyB,EAAKK,KAAKlC,MAEL6B,KAERF,MAAK,SAAAE,GACJR,EApBoC,CAAEX,KAAM,qBAAsBC,QAoBzCkB,IACzBR,EAASb,GAAkB,OAE5B2B,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,QAASF,SCM1BG,uBAVS,SAAC,GACvB,MAAO,CACLzC,aAFwD,EAAjC0C,SAAY1C,gBAUCsB,EAAzBmB,CAA6C3B","file":"static/js/10.bbb22c60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quiz-list-wrapper\":\"Quiz-list_quiz-list-wrapper__11_Nt\",\"quiz-list\":\"Quiz-list_quiz-list__1lHB_\",\"quiz-item\":\"Quiz-list_quiz-item__4f_SQ\",\"chapter\":\"Quiz-list_chapter__24b6_\",\"title\":\"Quiz-list_title__sCu7r\"};","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './Quiz-list.module.css'\r\n\r\nconst QuizList = ({ quizListInfo }) => {\r\n  const items = quizListInfo.map(el => {\r\n      return (\r\n        <li className={styles['quiz-item']} key={el.id}>\r\n          <Link to={`/quiz/${el.id}`}>\r\n            <span className={styles['chapter']}>{el.chapter}</span> / <span className={styles['title']}>{el.title}</span>\r\n          </Link>\r\n        </li>\r\n      )\r\n    })\r\n\r\n  return (\r\n    <div className={styles['quiz-list-wrapper']}>\r\n        <ul className={styles['quiz-list']}>\r\n          {items}\r\n        </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuizList","export const setIsFetchingList = (value) => ({ type: 'SET_IS_FETCHING_LIST', payload: value })\r\nexport const setQuizListInfo = (info) => ({ type: 'SET_QUIZ_LIST_INFO', payload: info })\r\n\r\nexport const getQuizList = () => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore()\r\n    dispatch(setIsFetchingList(true))\r\n    firestore.collection('quizes').get()\r\n    .then(querySnapshot => {\r\n      const list = []\r\n      querySnapshot.forEach((doc) => {\r\n        const el = {\r\n          title: doc.data().description.title,\r\n          chapter: doc.data().description.chapter,\r\n          id: doc.id,\r\n        }\r\n        list.push(el)\r\n      })\r\n      return list\r\n    })\r\n    .then(list => {\r\n      dispatch(setQuizListInfo(list))\r\n      dispatch(setIsFetchingList(false))\r\n    })\r\n    .catch(error => console.log('error', error))\r\n  }\r\n}","import React from 'react'\r\nimport QuizList from '../components/Quiz-list/Quiz-list'\r\nimport Preloader from '../components/UI/Preloader/Preloader'\r\nimport { connect } from 'react-redux'\r\nimport { getQuizList } from '../reducers/action-creators/quiz-list-AC'\r\n\r\nclass QuizListContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getQuizList()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.quizListInfo.length !== 0 ? <QuizList {...this.props} /> : <Preloader />}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ quizList: { quizListInfo } }) => {\r\n  return {\r\n    quizListInfo\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getQuizList,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizListContainer)\r\n"],"sourceRoot":""}