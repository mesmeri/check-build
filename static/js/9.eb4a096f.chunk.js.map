{"version":3,"sources":["hoc/with-redirect.jsx","components/Profile/Profile.module.css","components/UI/Tabs/Tabs.jsx","components/Profile/Profile.jsx","reducers/action-creators/profile-AC.js","containers/Profile-container.jsx"],"names":["withRedirect","Component","connect","auth","firebase","props","uid","to","module","exports","Tabs","children","items","map","el","Tab","eventKey","title","key","defaultActiveKey","MyStats","data","isFetching","Preloader","quantity","average","attempts","className","styles","MyQuizes","length","createdAt","toDate","description","topic","sheet","moment","format","Profile","myStats","myQuizes","isFetchingMyStats","isFetchingMyQuizes","setIsFetchingMyStats","value","type","payload","setIsFetchingMyQuizes","ProfileContainer","componentDidMount","getMyStats","getMyQuizes","componentWillUnmount","clearMyData","this","React","mapDispatchToProps","dispatch","getState","firestore","getFirestore","collection","doc","get","then","Object","keys","stats","totalResult","Number","bestResult","times","Math","floor","setMyStats","catch","error","console","log","finally","promises","forEach","promise","push","Promise","all","values","compose","profile"],"mappings":"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","file":"static/js/9.eb4a096f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst withRedirect = (Component) => {\r\n  const RedirectComponent = (props) => {\r\n    return (!props.auth.uid ? <Redirect to=\"/\" /> : <Component {...props} />)\r\n  }\r\n\r\n  const mapStateToProps = ({ firebase }) => {\r\n    return {\r\n      auth: firebase.auth,\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\nexport default withRedirect\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-wrapper\":\"Profile_profile-wrapper__1heMc\",\"my-quizes-item\":\"Profile_my-quizes-item__2tLut\",\"no-data-message\":\"Profile_no-data-message__38dMA\"};","import React from 'react'\r\nimport { Tabs as TabsContainer, Tab } from 'react-bootstrap'\r\n\r\nconst Tabs = ({ children }) => {\r\n  const items = children.map(el => {\r\n    return (\r\n    <Tab eventKey={el.props.title} title={el.props.title} key={el.props.title}>\r\n      {el}\r\n    </Tab>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <TabsContainer defaultActiveKey={children[0].title}>\r\n      {items}\r\n    </TabsContainer>\r\n  )\r\n}\r\n\r\nexport default Tabs\r\n","import React from 'react'\r\nimport Preloader from '../UI/Preloader/Preloader'\r\nimport Tabs from '../UI/Tabs/Tabs'\r\nimport moment from 'moment'\r\nimport styles from './Profile.module.css'\r\n\r\nconst MyStats = ({ data, isFetching }) => {\r\n  if (isFetching) {\r\n    return <Preloader />\r\n  }\r\n\r\n  if (!data) {\r\n    return <div className={styles['no-data-message']}>Вы еще не прошли ни одного теста...</div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p><span>Количество пройденых тестов:</span> {data.quantity}</p>\r\n      <p><span>Средний результат:</span> {data.average}</p>\r\n      <p><span>Количество попыток:</span> {data.attempts}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst MyQuizes = ({ data, isFetching }) => {\r\n  if (isFetching) {\r\n    return <Preloader />\r\n  }\r\n\r\n  if (!data || data.length === 0) {\r\n    return <div className={styles['no-data-message']}>У вас пока нет созданных тестов...</div>\r\n  }\r\n\r\n  return (\r\n    <ul className=\"my-quizes-list\">\r\n      {data.map(el => {\r\n        return (\r\n          <li className={styles['my-quizes-item']} key={el.createdAt.toDate()}>\r\n            <p>Тема: {el.description.topic}</p>\r\n            <p>Количество вопросов: {el.sheet.length}</p>\r\n            <p>Дата создания:{moment(el.createdAt.toDate()).format('DD YYYY, hh:mm')}</p>\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst Profile = ({ myStats, myQuizes, isFetchingMyStats, isFetchingMyQuizes }) => {\r\n  return (\r\n    <div className={styles['profile-wrapper']}>\r\n      <Tabs>\r\n        <MyStats data={myStats} isFetching={isFetchingMyStats} title=\"Статистика\" />\r\n        <MyQuizes data={myQuizes} isFetching={isFetchingMyQuizes} title=\"Мои тесты\" />\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile","export const setIsFetchingMyStats = (value) => ({ type: 'IS_FETCHING_MY_STATS', payload: value })\r\nexport const setIsFetchingMyQuizes = (value) => ({ type: 'IS_FETCHING_MY_QUIZES', payload: value })\r\nexport const setMyStats = (data) => ({ type: 'SET_MY_STATS', payload: data })\r\nexport const setMyQuizes = (list) => ({ type: 'SET_MY_QUIZES', payload: list })\r\nexport const clearMyData = () => ({ type: 'CLEAR_MY_DATA' })\r\n\r\nexport const getMyStats = () => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore()\r\n    const { uid } = getState().firebase.auth\r\n\r\n    dispatch(setIsFetchingMyStats(true))\r\n    firestore.collection('users').doc(uid).get()\r\n      .then(doc => doc.data())\r\n      .then(data => {\r\n        const quantity = Object.keys(data.stats).length\r\n\r\n        if (quantity !== 0) {\r\n          let totalResult = 0\r\n          let attempts = 0\r\n          for (const key in data.stats) {\r\n            totalResult += Number(data.stats[key].bestResult)\r\n            attempts += Number(data.stats[key].times)\r\n          }\r\n          const stats = {\r\n            average: Math.floor(totalResult / quantity),\r\n            quantity,\r\n            attempts\r\n          }\r\n          dispatch(setMyStats(stats))\r\n        }\r\n      })\r\n      .catch(error => console.log(error))\r\n      .finally(() => dispatch(setIsFetchingMyStats(false)))\r\n  }\r\n}\r\n\r\nexport const getMyQuizes = () => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore()\r\n    const { uid } = getState().firebase.auth\r\n\r\n    dispatch(setIsFetchingMyQuizes(true))\r\n    firestore.collection('users').doc(uid).get()\r\n      .then(doc => doc.data())\r\n      .then(data => {\r\n        const { myQuizes } = data\r\n        const promises = []\r\n\r\n        if (myQuizes && myQuizes.length !== 0) {\r\n          myQuizes.forEach(el => {\r\n            const promise = firestore.collection('privateQuizes').doc(el).get()\r\n              .then(doc => doc.data())\r\n\r\n            promises.push(promise)\r\n          })\r\n        }\r\n        Promise.all(promises).then(values => dispatch(setMyQuizes(values)))\r\n      })\r\n      .catch(error => console.log(error))\r\n      .finally(() => dispatch(setIsFetchingMyQuizes(false)))\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport withRedirect from '../hoc/with-redirect'\r\nimport Profile from '../components/Profile/Profile'\r\nimport { getMyStats, getMyQuizes, clearMyData } from '../reducers/action-creators/profile-AC'\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount = () => {\r\n    this.props.getMyStats()\r\n    this.props.getMyQuizes()\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this.props.clearMyData()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        myStats={this.props.myStats}\r\n        isFetchingMyStats={this.props.isFetchingMyStats}\r\n        myQuizes={this.props.myQuizes}\r\n        isFetchingMyQuizes={this.props.isFetchingMyQuizes} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ profile }) => {\r\n  const { myStats, myQuizes, isFetchingMyStats, isFetchingMyQuizes } = profile\r\n  return {\r\n    myStats,\r\n    myQuizes,\r\n    isFetchingMyStats,\r\n    isFetchingMyQuizes\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getMyStats,\r\n  getMyQuizes,\r\n  clearMyData\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}