{"version":3,"sources":["validators/validators.js","components/UI/inputs/Render-checkbox/Render-checkbox.jsx","components/UI/inputs/Render-input/Render-input.jsx","components/UI/inputs/Render-select/Render-select.jsx","components/UI/inputs/Render-textarea/Render-textarea.jsx","constants/constants.js","hoc/with-redirect.jsx","components/forms/Questions-form/Questions-form.module.css","components/Questions-list-item/Questions-list-item.module.css","components/Quiz-creator/Quiz-creator.module.css","components/forms/Description-form/Description-form.jsx","../node_modules/redux-form/es/formValueSelector.js","../node_modules/redux-form/es/createFormValueSelector.js","components/forms/Questions-form/Questions-form.jsx","components/Questions-list-item/Questions-list-item.jsx","components/UI/Accordion/Accordion.jsx","components/Quiz-creator/Quiz-creator.jsx","reducers/action-creators/new-quiz-AC.js","containers/Quiz-creator-container.jsx"],"names":["required","value","undefined","minLength","min","length","passwordMatched","allValues","password","RenderCheckbox","input","label","id","Math","trunc","random","className","type","onChange","htmlFor","RenderInput","meta","touched","error","isSmall","props","wrapperCls","inputCls","isError","push","join","RenderSelect","selectCls","children","RenderTextarea","rows","mutedText","CHAPTERS","withRedirect","Component","connect","auth","firebase","uid","to","module","exports","reduxForm","form","handleSubmit","onSubmit","Field","name","component","validate","Object","keys","map","el","key","Button","variant","size","createFormValueSelector","_ref","getIn","getFormState","invariant","nonNullGetFormState","state","_len","arguments","fields","Array","_key","reduce","accumulator","field","plain","setIn","selector","formValueSelector","QuestionFormWithSelector","addCode","styles","QuestionsListItem","data","onDeleteItem","onEditItem","variants","correct","time","code","onClick","Panel","height","panelRef","createRef","this","current","scrollHeight","setState","activeTab","index","activateTab","isActive","innerStyle","role","aria-expanded","style","aria-hidden","ref","React","Accordion","prev","ind","bind","content","QuizCreator","newQuiz","onCreateQuiz","onDescriptionSubmit","onQuestionSubmit","onClearQuiz","description","sheet","questionsData","question","chapter","title","setQuizCreatedError","payload","QuizCreatorContainer","setDescription","addQuestion","createQuiz","clearQuiz","deleteQuestion","console","log","mapDispatchToProps","dispatch","getState","getFirestore","getFirebase","firestore","collection","add","createdAt","Date","then","docRef","quizID","doc","update","myQuizes","FieldValue","arrayUnion","catch","compose"],"mappings":"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","file":"static/js/5.54ceecae.chunk.js","sourcesContent":["export const required = value => value ? undefined : 'Обязательное поле'\r\nexport const minLength = min => value => {\r\n  return value && value.length < min ? `Не менее ${min} символов` : undefined\r\n}\r\nexport const email = value => {\r\n  return value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) \r\n    ? 'Неверный адресс' : undefined\r\n}\r\n\r\nexport const passwordMatched = (value, allValues) => {\r\n  return value !== allValues.password \r\n    ? 'Пароли не совпадают' : undefined\r\n}\r\n","import React from 'react'\r\n\r\nconst RenderCheckbox = ({ input, label, ...props }) => {\r\n  const id = Math.trunc(Math.random() * 1000)\r\n\r\n  return (\r\n    <div className=\"custom-control custom-checkbox mb-3\">\r\n      <input type=\"checkbox\" id={id}\r\n        className=\"custom-control-input\" \r\n        onChange={input.onChange} />\r\n      <label className=\"custom-control-label\" htmlFor={id}>{label}</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RenderCheckbox","import React from 'react'\r\n\r\nimport './Render-input.css'\r\n\r\nconst RenderInput = ({ input, type, label, meta: { touched, error }, isSmall, ...props }) => {\r\n  const wrapperCls = ['form-group']\r\n  const inputCls = ['form-control']\r\n  const isError = (touched && error)\r\n  const id = Math.trunc(Math.random() * 1000)\r\n  if (isError) {\r\n    wrapperCls.push('has-danger')\r\n    inputCls.push('is-invalid')\r\n  }\r\n  if (isSmall) {\r\n    inputCls.push('form-control-sm')\r\n  }\r\n  return (\r\n    <div className={wrapperCls.join(' ')}>\r\n      <label htmlFor={`password-${id}`}>{label}</label>\r\n      <input \r\n        type={type} \r\n        className={inputCls.join(' ')}\r\n        id={`${type}-${id}`}\r\n        {...input} {...props} />\r\n      {isError && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RenderInput\r\n","import React from 'react'\r\n\r\nconst RenderSelect = ({ input, label, meta: { touched, error }, isSmall, ...props }) => {\r\n  const selectCls = ['form-control']\r\n  const isError = (touched && error)\r\n  const id = Math.trunc(Math.random() * 1000)\r\n  if (isError) {\r\n    selectCls.push('is-invalid')\r\n  }\r\n\r\n  if (isSmall) {\r\n    selectCls.push('form-control-sm')\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className={isError ? 'form-group has-danger' : 'form-group'}>\r\n      <label htmlFor={id}>{label}</label>\r\n      <select \r\n        className={selectCls.join(' ')} \r\n        id={id} onChange={input.onChange}>\r\n        {props.children}\r\n      </select>\r\n      {isError && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RenderSelect","import React from 'react'\r\n\r\nconst RenderTextarea = ({ input, label, ...props }) => {\r\n  const id = Math.trunc(Math.random() * 1000)\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={id}>{label}</label>\r\n      <textarea className=\"form-control\" id={id} rows=\"5\" {...input} />\r\n      <small className=\"form-text text-muted\">{props.mutedText}</small>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RenderTextarea","export const CHAPTERS = {\r\n  'Basic JS': 'basic-js',\r\n  'Advanced JS': 'advanced-js',\r\n  'Basic React.js': 'react-basic',\r\n  'Advanced React.js': 'react-advanced', \r\n  'Databases': 'databases',\r\n  'HTML&CSS': 'html-css'\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst withRedirect = (Component) => {\r\n  const RedirectComponent = (props) => {\r\n    return (!props.auth.uid ? <Redirect to=\"/\" /> : <Component {...props} />)\r\n  }\r\n\r\n  const mapStateToProps = ({ firebase }) => {\r\n    return {\r\n      auth: firebase.auth,\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\nexport default withRedirect\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select-wrapper\":\"Questions-form_select-wrapper__2H4t-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questions-item\":\"Questions-list-item_questions-item__14uJa\",\"point\":\"Questions-list-item_point__2RC9R\",\"variants-item\":\"Questions-list-item_variants-item__3o8t2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"creator\":\"Quiz-creator_creator__ktb5L\",\"creator-inner\":\"Quiz-creator_creator-inner__2QLrh\",\"creator-part\":\"Quiz-creator_creator-part__2Mdak\",\"form-wrapper\":\"Quiz-creator_form-wrapper__u0Xf1\",\"questions\":\"Quiz-creator_questions__2swEN\",\"questions-count\":\"Quiz-creator_questions-count__2oU6P\",\"point\":\"Quiz-creator_point__24_JT\",\"info-text\":\"Quiz-creator_info-text__KgL2p\",\"error-container\":\"Quiz-creator_error-container__2yWxT\"};","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { RenderSelect, RenderInput } from '../../UI/inputs'\r\nimport { required } from '../../../validators/validators'\r\nimport { CHAPTERS } from '../../../constants/constants'\r\n\r\nconst DescriptionForm = ({ handleSubmit }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Field\r\n        name=\"chapter\"\r\n        label=\"Раздел\"\r\n        component={RenderSelect}\r\n        validate={required}\r\n        isSmall\r\n      >\r\n        <option />\r\n        {Object.keys(CHAPTERS).map(el => <option value={el} key={el}>{el}</option>)}\r\n      </Field>\r\n      <Field component={RenderInput}\r\n        type=\"text\"\r\n        label=\"Тема\"\r\n        name=\"title\"\r\n        validate={[required]}\r\n        isSmall />\r\n      <div className=\"d-flex justify-content-center align-items-center\">\r\n        <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" className=\"mb-3\">Сохранить</Button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'description'\r\n})(DescriptionForm)","import createFormValueSelector from './createFormValueSelector';\nimport plain from './structure/plain';\nexport default createFormValueSelector(plain);","import invariant from 'invariant';\nimport plain from './structure/plain';\nexport default function createFormValueSelector(_ref) {\n  var getIn = _ref.getIn;\n  return function (form, getFormState) {\n    invariant(form, 'Form value must be specified');\n\n    var nonNullGetFormState = getFormState || function (state) {\n      return getIn(state, 'form');\n    };\n\n    return function (state) {\n      for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        fields[_key - 1] = arguments[_key];\n      }\n\n      invariant(fields.length, 'No fields specified');\n      return fields.length === 1 ? // only selecting one field, so return its value\n      getIn(nonNullGetFormState(state), form + \".values.\" + fields[0]) : // selecting many fields, so return an object of field values\n      fields.reduce(function (accumulator, field) {\n        var value = getIn(nonNullGetFormState(state), form + \".values.\" + field);\n        return value === undefined ? accumulator : plain.setIn(accumulator, field, value);\n      }, {});\n    };\n  };\n}","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { RenderInput, RenderSelect, RenderCheckbox, RenderTextarea } from '../../UI/inputs'\r\nimport { Field, reduxForm, formValueSelector } from 'redux-form'\r\nimport { required } from '../../../validators/validators'\r\n\r\nimport styles from './Questions-form.module.css'\r\n\r\nconst QuestionForm = ({ handleSubmit, addCode }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Field\r\n        component={RenderInput}\r\n        label={\"Вопрос\"}\r\n        validate={required}\r\n        name=\"question\"\r\n        isSmall />\r\n      <Field\r\n        component={RenderCheckbox}\r\n        label=\"Добавить код\"\r\n        name=\"addCode\" />\r\n      {addCode && (\r\n        <Field\r\n          component={RenderTextarea}\r\n          name=\"code\"\r\n          mutedText=\"Пожалуйста, используйте двойной пробел вместо Tab.\" />\r\n      )}\r\n      <Field\r\n        component={RenderInput}\r\n        label={\"Вариант 1\"}\r\n        validate={required}\r\n        name=\"firstVariant\"\r\n        isSmall />\r\n      <Field\r\n        component={RenderInput}\r\n        label={\"Вариант 2\"}\r\n        validate={required}\r\n        name=\"secondVariant\"\r\n        isSmall />\r\n      <Field\r\n        component={RenderInput}\r\n        label={\"Вариант 3\"}\r\n        validate={required}\r\n        name=\"thirthVariant\"\r\n        isSmall />\r\n      <Field\r\n        component={RenderInput}\r\n        label={\"Вариант 4\"}\r\n        validate={required}\r\n        name=\"fourthVariant\"\r\n        isSmall />\r\n      <div className={styles['select-wrapper']}>\r\n        <Field\r\n          component={RenderSelect}\r\n          label={\"Ответ (№)\"}\r\n          validate={required}\r\n          name=\"correct\"\r\n          isSmall>\r\n          <option />\r\n          <option value=\"1\">1</option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"3\">3</option>\r\n          <option value=\"4\">4</option>\r\n        </Field>\r\n        <Field\r\n          component={RenderSelect}\r\n          label={\"Время (с)\"}\r\n          validate={required}\r\n          name=\"time\"\r\n          isSmall>\r\n          <option />\r\n          <option value=\"15\">15</option>\r\n          <option value=\"20\">20</option>\r\n          <option value=\"25\">25</option>\r\n          <option value=\"30\">30</option>\r\n          <option value=\"45\">45</option>\r\n          <option value=\"60\">60</option>\r\n        </Field>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center align-items-center\">\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"outline-primary\"\r\n        size=\"sm\"\r\n        className=\"mt-5 mb-5\">\r\n        Сохранить\r\n      </Button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst selector = formValueSelector('question')\r\nconst mapStateToProps = (state) => {\r\n  const addCode = selector(state, 'addCode')\r\n  return {\r\n    addCode\r\n  }\r\n}\r\n\r\nconst QuestionFormWithSelector = connect(mapStateToProps)(QuestionForm)\r\n\r\nexport default reduxForm({\r\n  form: 'question'\r\n})(QuestionFormWithSelector)\r\n\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport styles from './Questions-list-item.module.css'\r\n\r\nconst QuestionsListItem = ({ data, onDeleteItem, onEditItem }) => {\r\n  const { variants, correct, time, code } = data\r\n  return (\r\n    <div className={styles['questions-item']}>\r\n      { code && <div className={styles['code-example']}><pre><code>{code}</code></pre></div> }\r\n      <span className={styles['point']}>Варианты:</span>\r\n      <ol>\r\n        {variants.map(variant => {\r\n          return (\r\n            <li className={styles['variants-item']} key={variant}>{variant}</li>\r\n          )\r\n        })}\r\n      </ol>\r\n      <p><span className={styles['point']}>Правильный ответ:</span>{variants[correct - 1]}</p>\r\n      <p><span className={styles['point']}>Время на ответ:</span> {time} секунд</p>\r\n      <Button\r\n        variant=\"outline-danger\"\r\n        size=\"sm\" className=\"mr-3 mt-3 mb-3\"\r\n        onClick={onDeleteItem}>\r\n        Удалить\r\n      </Button>\r\n      <Button\r\n        variant=\"outline-primary\"\r\n        size=\"sm\" className=\"mt-3 mb-3\"\r\n        onClick={onEditItem}>\r\n        Редактировать\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuestionsListItem\r\n","import React, { createRef } from 'react'\r\n\r\nimport './Accordion.css'\r\n\r\nclass Panel extends React.Component {\r\n  constructor(props) {\r\n    super()\r\n    this.state = {\r\n      height: 0\r\n    }\r\n    this.panelRef = createRef()\r\n  }\r\n\r\n  componentDidMount() {\r\n    const height = this.panelRef.current.scrollHeight\r\n    this.setState({\r\n      height\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { label, activeTab, index, activateTab } = this.props\r\n    const { height } = this.state\r\n    const isActive = activeTab === index\r\n    const innerStyle = {\r\n      height: `${isActive ? height : 0}px`\r\n    }\r\n\r\n    return (\r\n      <div className='panel'\r\n        role='tabpanel'\r\n        aria-expanded={isActive}>\r\n        <button className='panel__label'\r\n          role='tab'\r\n          onClick={activateTab}>\r\n          {label}\r\n        </button>\r\n        <div className='panel__inner'\r\n          style={innerStyle}\r\n          aria-hidden={!isActive}\r\n          ref={this.panelRef}>\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Accordion extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      activeTab: -1\r\n    }\r\n  }\r\n\r\n  activateTab = (index) => {\r\n    this.setState(prev => ({\r\n      activeTab: prev.activeTab === index ? -1 : index\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n    const { activeTab } = this.state;\r\n    return (\r\n      <div className='accordion' role='tablist'>\r\n        {data.map((el, ind) =>\r\n          <Panel\r\n            key={ind}\r\n            activeTab={activeTab}\r\n            index={ind}\r\n            label={el.label}\r\n            activateTab={this.activateTab.bind(null, ind)}\r\n          >\r\n            {el.content}\r\n          </Panel>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Accordion","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport DescriptionForm from '../forms/Description-form/Description-form'\r\nimport QuestionsForm from '../forms/Questions-form/Questions-form'\r\nimport QuestionsListItem from '../Questions-list-item/Questions-list-item'\r\nimport Accordion from '../UI/Accordion/Accordion'\r\nimport styles from './Quiz-creator.module.css'\r\n\r\nconst QuizCreator = (props) => {\r\n  const { newQuiz,\r\n    onCreateQuiz,\r\n    onDescriptionSubmit,\r\n    onQuestionSubmit,\r\n    onDeleteItem,\r\n    onEditItem,\r\n    onClearQuiz,\r\n    error\r\n  } = props\r\n  const { description, sheet } = newQuiz\r\n  const questionsData = sheet.map((el, ind) => ({\r\n    label: el.question,\r\n    content: <QuestionsListItem data={el}\r\n      onDeleteItem={onDeleteItem.bind(null, ind)}\r\n      onEditItem={onEditItem.bind(null, ind)} />\r\n  }))\r\n\r\n  return (\r\n    <div className={styles['creator']}>\r\n      <div className={styles['creator-inner']}>\r\n        <div className={[ styles['creator-part'], styles['description'] ].join(' ')}>\r\n          <p>\r\n            <span className={styles['point']}>Раздел:</span><span className={styles['info-text']}>{description.chapter}</span>\r\n          </p>\r\n          <p>\r\n            <span className={styles['point']}>Тема:</span><span className={styles['info-text']}>{description.title}</span>\r\n          </p>\r\n        </div>\r\n        <div className={styles['form-wrapper']}>\r\n          <DescriptionForm onSubmit={onDescriptionSubmit} />\r\n        </div>\r\n      </div>\r\n      <div className={styles['creator-inner']}>\r\n        <div className={[ styles['creator-part'], styles['questions'] ].join(' ')}>\r\n          <p className=\"d-flex justify-content-between\">\r\n            <span>Вопросы</span>\r\n            <span className={styles['questions-count']}>\r\n              {sheet.length}\r\n            </span>\r\n          </p>\r\n          <Accordion data={questionsData} />\r\n        </div>\r\n        <div className={styles['form-wrapper']}>\r\n          <QuestionsForm onSubmit={onQuestionSubmit} />\r\n        </div>\r\n      </div>\r\n      {error && <div className={styles['error-container']}>{error}</div>}\r\n      <div className=\"d-flex align-items-center justify-content-center flex-column flex-sm-row pt-3\">\r\n        <Button onClick={onClearQuiz} variant=\"outline-danger\" className=\"m-3 m-sm-5\">Очистить</Button>\r\n        <Button onClick={onCreateQuiz} variant=\"primary\" className=\"m-3 m-sm-5\">Создать тест</Button>\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default QuizCreator\r\n","export const setDescription = (data) => ({ type: 'SET_DESCRIPTION', payload: data })\r\nexport const addQuestion = (data) => ({ type: 'ADD_QUESTION', payload: data })\r\nexport const deleteQuestion = (index) => ({ type: 'DELETE_QUESTION', payload: index })\r\nexport const clearQuiz = () => ({ type: 'CLEAR_QUIZ' })\r\nexport const setQuizCreatedError = (error) => ({ type: 'QUIZ_CREATED_ERROR', payload: error })\r\nexport const setQuizCreatedSuccess = () => ({ type: 'QUIZ_CREATED_SUCCESS' })\r\n\r\nexport const createQuiz = () => {\r\n  return (dispatch, getState, { getFirestore, getFirebase }) => {\r\n    const firestore = getFirestore()\r\n    const firebase = getFirebase()\r\n    const uid = getState().firebase.auth.uid\r\n    const { description, sheet } = getState().newQuiz\r\n\r\n    if (!description.chapter || !description.title || sheet.length === 0) {\r\n      dispatch(setQuizCreatedError('Не все поля заполнены!'))\r\n      return\r\n    }\r\n\r\n    firestore.collection('privateQuizes')\r\n      .add({ description, sheet, createdAt: new Date() })\r\n      .then(docRef => {\r\n        const quizID = docRef.id\r\n        firestore.collection('users').doc(uid).update({\r\n          myQuizes: firebase.firestore.FieldValue.arrayUnion(quizID)\r\n        })\r\n      })\r\n      .then(() => {\r\n        dispatch(setQuizCreatedSuccess())\r\n      })\r\n      .catch((error) => {\r\n        console.log('error', error)\r\n        dispatch(setQuizCreatedError('Ошибка'))\r\n      })\r\n  }\r\n}\r\n\r\nexport const exportHandler = (value) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore()\r\n    const { description, sheet } = value\r\n\r\n    firestore.collection('quizes').doc()\r\n      .set({ description, sheet, createdAt: new Date() })\r\n      .then(() => {\r\n        console.log('success')\r\n      })\r\n      .catch((error) => {\r\n        console.log('error', error)\r\n      })\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport withRedirect from '../hoc/with-redirect'\r\nimport QuizCreator from '../components/Quiz-creator/Quiz-creator'\r\nimport {\r\n  createQuiz, setDescription, addQuestion,\r\n  deleteQuestion, clearQuiz\r\n} from '../reducers/action-creators/new-quiz-AC'\r\n\r\n\r\nclass QuizCreatorContainer extends Component {\r\n  onDescriptionSubmit = (data) => {\r\n    this.props.setDescription(data)\r\n  }\r\n\r\n  onQuestionSubmit = (data) => {\r\n    this.props.addQuestion(data)\r\n  }\r\n\r\n  onCreateQuiz = () => {\r\n    this.props.createQuiz()\r\n  }\r\n\r\n  onClearQuiz = () => {\r\n    this.props.clearQuiz()\r\n  }\r\n\r\n  onDeleteItem = (index) => {\r\n    this.props.deleteQuestion(index)\r\n  }\r\n\r\n  onEditItem = (index) => {\r\n    //TODO\r\n    console.log('edit this item', index)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <QuizCreator\r\n        newQuiz={this.props.newQuiz}\r\n        onDescriptionSubmit={this.onDescriptionSubmit}\r\n        onQuestionSubmit={this.onQuestionSubmit}\r\n        onCreateQuiz={this.onCreateQuiz}\r\n        onDeleteItem={this.onDeleteItem}\r\n        onEditItem={this.onEditItem}\r\n        onClearQuiz={this.onClearQuiz}\r\n        error={this.props.newQuiz.error}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ newQuiz }) => {\r\n  return {\r\n    newQuiz\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  createQuiz,\r\n  setDescription,\r\n  addQuestion,\r\n  deleteQuestion,\r\n  clearQuiz\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withRedirect\r\n)(QuizCreatorContainer)\r\n"],"sourceRoot":""}